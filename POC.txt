sravan@sravankumar:~/terraform/bastion$ terraform init

Initializing the backend...
Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v6.7.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
sravan@sravankumar:~/terraform/bastion$ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.nat will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + region               = "us-west-2"
      + tags                 = {
          + "Name" = "nat-eip"
        }
      + tags_all             = {
          + "Name" = "nat-eip"
        }
    }

  # aws_instance.bastion will be created
  + resource "aws_instance" "bastion" {
      + ami                                  = "ami-05f991c49d264708f"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "jenQ"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + region                               = "us-west-2"
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Bastion-Host"
        }
      + tags_all                             = {
          + "Name" = "Bastion-Host"
        }
      + tenancy                              = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_instance.private_ec2 will be created
  + resource "aws_instance" "private_ec2" {
      + ami                                  = "ami-05f991c49d264708f"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "jenQ"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + region                               = "us-west-2"
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Private-EC2"
        }
      + tags_all                             = {
          + "Name" = "Private-EC2"
        }
      + tenancy                              = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + region   = "us-west-2"
      + tags     = {
          + "Name" = "internet-gateway"
        }
      + tags_all = {
          + "Name" = "internet-gateway"
        }
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.nat will be created
  + resource "aws_nat_gateway" "nat" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + region                             = "us-west-2"
      + secondary_allocation_ids           = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Name" = "nat-gateway"
        }
      + tags_all                           = {
          + "Name" = "nat-gateway"
        }
    }

  # aws_route_table.private_rt will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + region           = "us-west-2"
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name" = "private-rt"
        }
      + tags_all         = {
          + "Name" = "private-rt"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + region           = "us-west-2"
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name" = "public-rt"
        }
      + tags_all         = {
          + "Name" = "public-rt"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.private_assoc will be created
  + resource "aws_route_table_association" "private_assoc" {
      + id             = (known after apply)
      + region         = "us-west-2"
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public_assoc will be created
  + resource "aws_route_table_association" "public_assoc" {
      + id             = (known after apply)
      + region         = "us-west-2"
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.bastion_sg will be created
  + resource "aws_security_group" "bastion_sg" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "bastion-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + region                 = "us-west-2"
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "bastion-sg"
        }
      + tags_all               = {
          + "Name" = "bastion-sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.private_sg will be created
  + resource "aws_security_group" "private_sg" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = []
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = (known after apply)
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "private-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + region                 = "us-west-2"
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "private-sg"
        }
      + tags_all               = {
          + "Name" = "private-sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.private will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + region                                         = "us-west-2"
      + tags                                           = {
          + "Name" = "private-subnet"
        }
      + tags_all                                       = {
          + "Name" = "private-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.public will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + region                                         = "us-west-2"
      + tags                                           = {
          + "Name" = "public-subnet"
        }
      + tags_all                                       = {
          + "Name" = "public-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + region                               = "us-west-2"
      + tags                                 = {
          + "Name" = "secure-vpc"
        }
      + tags_all                             = {
          + "Name" = "secure-vpc"
        }
    }

  # aws_vpc_endpoint.s3_endpoint will be created
  + resource "aws_vpc_endpoint" "s3_endpoint" {
      + arn                   = (known after apply)
      + cidr_blocks           = (known after apply)
      + dns_entry             = (known after apply)
      + id                    = (known after apply)
      + ip_address_type       = (known after apply)
      + network_interface_ids = (known after apply)
      + owner_id              = (known after apply)
      + policy                = (known after apply)
      + prefix_list_id        = (known after apply)
      + private_dns_enabled   = (known after apply)
      + region                = "us-west-2"
      + requester_managed     = (known after apply)
      + route_table_ids       = (known after apply)
      + security_group_ids    = (known after apply)
      + service_name          = "com.amazonaws.us-west-2.s3"
      + service_region        = (known after apply)
      + state                 = (known after apply)
      + subnet_ids            = (known after apply)
      + tags                  = {
          + "Name" = "s3-endpoint"
        }
      + tags_all              = {
          + "Name" = "s3-endpoint"
        }
      + vpc_endpoint_type     = "Gateway"
      + vpc_id                = (known after apply)

      + dns_options (known after apply)

      + subnet_configuration (known after apply)
    }

Plan: 15 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + bastion_public_ip = (known after apply)
  + private_ec2_id    = (known after apply)
  + vpc_id            = (known after apply)

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
sravan@sravankumar:~/terraform/bastion$ 

ravan@sravankumar:~/terraform/bastion$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.nat will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + region               = "us-west-2"
      + tags                 = {
          + "Name" = "nat-eip"
        }
      + tags_all             = {
          + "Name" = "nat-eip"
        }
    }

  # aws_instance.bastion will be created
  + resource "aws_instance" "bastion" {
      + ami                                  = "ami-05f991c49d264708f"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "jenQ"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + region                               = "us-west-2"
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Bastion-Host"
        }
      + tags_all                             = {
          + "Name" = "Bastion-Host"
        }
      + tenancy                              = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_instance.private_ec2 will be created
  + resource "aws_instance" "private_ec2" {
      + ami                                  = "ami-05f991c49d264708f"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "jenQ"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + region                               = "us-west-2"
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Private-EC2"
        }
      + tags_all                             = {
          + "Name" = "Private-EC2"
        }
      + tenancy                              = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + region   = "us-west-2"
      + tags     = {
          + "Name" = "internet-gateway"
        }
      + tags_all = {
          + "Name" = "internet-gateway"
        }
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.nat will be created
  + resource "aws_nat_gateway" "nat" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + region                             = "us-west-2"
      + secondary_allocation_ids           = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Name" = "nat-gateway"
        }
      + tags_all                           = {
          + "Name" = "nat-gateway"
        }
    }

  # aws_route_table.private_rt will be created
  + resource "aws_route_table" "private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + region           = "us-west-2"
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name" = "private-rt"
        }
      + tags_all         = {
          + "Name" = "private-rt"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + region           = "us-west-2"
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name" = "public-rt"
        }
      + tags_all         = {
          + "Name" = "public-rt"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.private_assoc will be created
  + resource "aws_route_table_association" "private_assoc" {
      + id             = (known after apply)
      + region         = "us-west-2"
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public_assoc will be created
  + resource "aws_route_table_association" "public_assoc" {
      + id             = (known after apply)
      + region         = "us-west-2"
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.bastion_sg will be created
  + resource "aws_security_group" "bastion_sg" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "bastion-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + region                 = "us-west-2"
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "bastion-sg"
        }
      + tags_all               = {
          + "Name" = "bastion-sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.private_sg will be created
  + resource "aws_security_group" "private_sg" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = []
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = (known after apply)
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "private-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + region                 = "us-west-2"
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "private-sg"
        }
      + tags_all               = {
          + "Name" = "private-sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.private will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + region                                         = "us-west-2"
      + tags                                           = {
          + "Name" = "private-subnet"
        }
      + tags_all                                       = {
          + "Name" = "private-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.public will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + region                                         = "us-west-2"
      + tags                                           = {
          + "Name" = "public-subnet"
        }
      + tags_all                                       = {
          + "Name" = "public-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + region                               = "us-west-2"
      + tags                                 = {
          + "Name" = "secure-vpc"
        }
      + tags_all                             = {
          + "Name" = "secure-vpc"
        }
    }

  # aws_vpc_endpoint.s3_endpoint will be created
  + resource "aws_vpc_endpoint" "s3_endpoint" {
      + arn                   = (known after apply)
      + cidr_blocks           = (known after apply)
      + dns_entry             = (known after apply)
      + id                    = (known after apply)
      + ip_address_type       = (known after apply)
      + network_interface_ids = (known after apply)
      + owner_id              = (known after apply)
      + policy                = (known after apply)
      + prefix_list_id        = (known after apply)
      + private_dns_enabled   = (known after apply)
      + region                = "us-west-2"
      + requester_managed     = (known after apply)
      + route_table_ids       = (known after apply)
      + security_group_ids    = (known after apply)
      + service_name          = "com.amazonaws.us-west-2.s3"
      + service_region        = (known after apply)
      + state                 = (known after apply)
      + subnet_ids            = (known after apply)
      + tags                  = {
          + "Name" = "s3-endpoint"
        }
      + tags_all              = {
          + "Name" = "s3-endpoint"
        }
      + vpc_endpoint_type     = "Gateway"
      + vpc_id                = (known after apply)

      + dns_options (known after apply)

      + subnet_configuration (known after apply)
    }

Plan: 15 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + bastion_public_ip = (known after apply)
  + private_ec2_id    = (known after apply)
  + vpc_id            = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
aws_vpc.main: Creating...
aws_eip.nat: Creating...
aws_eip.nat: Creation complete after 2s [id=eipalloc-0b0eb154a837444cc]
aws_vpc.main: Still creating... [00m10s elapsed]
aws_vpc.main: Creation complete after 15s [id=vpc-08e2588513ef1187f]
aws_internet_gateway.igw: Creating...
aws_subnet.private: Creating...
aws_subnet.public: Creating...
aws_security_group.bastion_sg: Creating...
aws_subnet.private: Creation complete after 2s [id=subnet-049bc353c8d2537d5]
aws_internet_gateway.igw: Creation complete after 2s [id=igw-054969ed16e22f151]
aws_route_table.public_rt: Creating...
aws_route_table.public_rt: Creation complete after 2s [id=rtb-0577f30fac8cfcc8f]
aws_security_group.bastion_sg: Creation complete after 5s [id=sg-031cc2c27d656f544]
aws_security_group.private_sg: Creating...
aws_security_group.private_sg: Creation complete after 5s [id=sg-041c3404a944a7e48]
aws_instance.private_ec2: Creating...
aws_subnet.public: Still creating... [00m10s elapsed]
aws_subnet.public: Creation complete after 14s [id=subnet-091400c1d3ca37516]
aws_route_table_association.public_assoc: Creating...
aws_nat_gateway.nat: Creating...
aws_instance.bastion: Creating...
aws_route_table_association.public_assoc: Creation complete after 1s [id=rtbassoc-0fd8b9cef27119b1d]
aws_instance.private_ec2: Still creating... [00m11s elapsed]
aws_nat_gateway.nat: Still creating... [00m10s elapsed]
aws_instance.bastion: Still creating... [00m10s elapsed]
aws_instance.private_ec2: Still creating... [00m21s elapsed]
aws_nat_gateway.nat: Still creating... [00m20s elapsed]
aws_instance.bastion: Still creating... [00m20s elapsed]
aws_instance.private_ec2: Still creating... [00m31s elapsed]
aws_nat_gateway.nat: Still creating... [00m30s elapsed]
aws_instance.bastion: Still creating... [00m30s elapsed]
aws_instance.private_ec2: Creation complete after 37s [id=i-081ac78d67956ba55]
aws_instance.bastion: Creation complete after 36s [id=i-08d51ad8925fb9c09]
aws_nat_gateway.nat: Still creating... [00m41s elapsed]
aws_nat_gateway.nat: Still creating... [00m51s elapsed]
aws_nat_gateway.nat: Still creating... [01m01s elapsed]
aws_nat_gateway.nat: Still creating... [01m12s elapsed]
aws_nat_gateway.nat: Still creating... [01m22s elapsed]
aws_nat_gateway.nat: Creation complete after 1m30s [id=nat-0798ab7d4fbf0e586]
aws_route_table.private_rt: Creating...
aws_route_table.private_rt: Creation complete after 2s [id=rtb-0c4ba9a105b1ac8c2]
aws_route_table_association.private_assoc: Creating...
aws_vpc_endpoint.s3_endpoint: Creating...
aws_route_table_association.private_assoc: Creation complete after 1s [id=rtbassoc-0401c4cd056583925]
aws_vpc_endpoint.s3_endpoint: Creation complete after 9s [id=vpce-00e78f7ef2d17830e]

Apply complete! Resources: 15 added, 0 changed, 0 destroyed.

Outputs:

bastion_public_ip = "52.32.227.13"
private_ec2_id = "i-081ac78d67956ba55"
vpc_id = "vpc-08e2588513ef1187f"
sravan@sravankumar:~/terraform/bastion$ 

sravan@sravankumar:~/terraform/bastion$ terraform destroy
aws_vpc.main: Refreshing state... [id=vpc-08e2588513ef1187f]
aws_eip.nat: Refreshing state... [id=eipalloc-0b0eb154a837444cc]
aws_internet_gateway.igw: Refreshing state... [id=igw-054969ed16e22f151]
aws_subnet.private: Refreshing state... [id=subnet-049bc353c8d2537d5]
aws_subnet.public: Refreshing state... [id=subnet-091400c1d3ca37516]
aws_security_group.bastion_sg: Refreshing state... [id=sg-031cc2c27d656f544]
aws_route_table.public_rt: Refreshing state... [id=rtb-0577f30fac8cfcc8f]
aws_nat_gateway.nat: Refreshing state... [id=nat-0798ab7d4fbf0e586]
aws_instance.bastion: Refreshing state... [id=i-08d51ad8925fb9c09]
aws_security_group.private_sg: Refreshing state... [id=sg-041c3404a944a7e48]
aws_route_table_association.public_assoc: Refreshing state... [id=rtbassoc-0fd8b9cef27119b1d]
aws_route_table.private_rt: Refreshing state... [id=rtb-0c4ba9a105b1ac8c2]
aws_instance.private_ec2: Refreshing state... [id=i-081ac78d67956ba55]
aws_vpc_endpoint.s3_endpoint: Refreshing state... [id=vpce-00e78f7ef2d17830e]
aws_route_table_association.private_assoc: Refreshing state... [id=rtbassoc-0401c4cd056583925]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_eip.nat will be destroyed
  - resource "aws_eip" "nat" {
      - allocation_id            = "eipalloc-0b0eb154a837444cc" -> null
      - arn                      = "arn:aws:ec2:us-west-2:221711265081:elastic-ip/eipalloc-0b0eb154a837444cc" -> null
      - association_id           = "eipassoc-022d4759c1b722729" -> null
      - domain                   = "vpc" -> null
      - id                       = "eipalloc-0b0eb154a837444cc" -> null
      - network_border_group     = "us-west-2" -> null
      - network_interface        = "eni-056450c22eeaed83e" -> null
      - private_dns              = "ip-10-0-1-98.us-west-2.compute.internal" -> null
      - private_ip               = "10.0.1.98" -> null
      - public_dns               = "ec2-50-112-153-212.us-west-2.compute.amazonaws.com" -> null
      - public_ip                = "50.112.153.212" -> null
      - public_ipv4_pool         = "amazon" -> null
      - region                   = "us-west-2" -> null
      - tags                     = {
          - "Name" = "nat-eip"
        } -> null
      - tags_all                 = {
          - "Name" = "nat-eip"
        } -> null
        # (5 unchanged attributes hidden)
    }

  # aws_instance.bastion will be destroyed
  - resource "aws_instance" "bastion" {
      - ami                                  = "ami-05f991c49d264708f" -> null
      - arn                                  = "arn:aws:ec2:us-west-2:221711265081:instance/i-08d51ad8925fb9c09" -> null
      - associate_public_ip_address          = true -> null
      - availability_zone                    = "us-west-2a" -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-08d51ad8925fb9c09" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - key_name                             = "jenQ" -> null
      - monitoring                           = false -> null
      - placement_partition_number           = 0 -> null
      - primary_network_interface_id         = "eni-0ec25a0c06ea2d043" -> null
      - private_dns                          = "ip-10-0-1-54.us-west-2.compute.internal" -> null
      - private_ip                           = "10.0.1.54" -> null
      - public_dns                           = "ec2-52-32-227-13.us-west-2.compute.amazonaws.com" -> null
      - public_ip                            = "52.32.227.13" -> null
      - region                               = "us-west-2" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-091400c1d3ca37516" -> null
      - tags                                 = {
          - "Name" = "Bastion-Host"
        } -> null
      - tags_all                             = {
          - "Name" = "Bastion-Host"
        } -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-031cc2c27d656f544",
        ] -> null
        # (7 unchanged attributes hidden)

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - cpu_options {
          - core_count       = 1 -> null
          - threads_per_core = 1 -> null
            # (1 unchanged attribute hidden)
        }

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_protocol_ipv6          = "disabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - private_dns_name_options {
          - enable_resource_name_dns_a_record    = false -> null
          - enable_resource_name_dns_aaaa_record = false -> null
          - hostname_type                        = "ip-name" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/sda1" -> null
          - encrypted             = false -> null
          - iops                  = 3000 -> null
          - tags                  = {} -> null
          - tags_all              = {} -> null
          - throughput            = 125 -> null
          - volume_id             = "vol-05676af78af7e847f" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp3" -> null
            # (1 unchanged attribute hidden)
        }
    }

  # aws_instance.private_ec2 will be destroyed
  - resource "aws_instance" "private_ec2" {
      - ami                                  = "ami-05f991c49d264708f" -> null
      - arn                                  = "arn:aws:ec2:us-west-2:221711265081:instance/i-081ac78d67956ba55" -> null
      - associate_public_ip_address          = false -> null
      - availability_zone                    = "us-west-2a" -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-081ac78d67956ba55" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - key_name                             = "jenQ" -> null
      - monitoring                           = false -> null
      - placement_partition_number           = 0 -> null
      - primary_network_interface_id         = "eni-0dae9783d4c5be4f4" -> null
      - private_dns                          = "ip-10-0-2-31.us-west-2.compute.internal" -> null
      - private_ip                           = "10.0.2.31" -> null
      - region                               = "us-west-2" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-049bc353c8d2537d5" -> null
      - tags                                 = {
          - "Name" = "Private-EC2"
        } -> null
      - tags_all                             = {
          - "Name" = "Private-EC2"
        } -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-041c3404a944a7e48",
        ] -> null
        # (9 unchanged attributes hidden)

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - cpu_options {
          - core_count       = 1 -> null
          - threads_per_core = 1 -> null
            # (1 unchanged attribute hidden)
        }

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_protocol_ipv6          = "disabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - private_dns_name_options {
          - enable_resource_name_dns_a_record    = false -> null
          - enable_resource_name_dns_aaaa_record = false -> null
          - hostname_type                        = "ip-name" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/sda1" -> null
          - encrypted             = false -> null
          - iops                  = 3000 -> null
          - tags                  = {} -> null
          - tags_all              = {} -> null
          - throughput            = 125 -> null
          - volume_id             = "vol-025d6524bc3e4ee2d" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp3" -> null
            # (1 unchanged attribute hidden)
        }
    }

  # aws_internet_gateway.igw will be destroyed
  - resource "aws_internet_gateway" "igw" {
      - arn      = "arn:aws:ec2:us-west-2:221711265081:internet-gateway/igw-054969ed16e22f151" -> null
      - id       = "igw-054969ed16e22f151" -> null
      - owner_id = "221711265081" -> null
      - region   = "us-west-2" -> null
      - tags     = {
          - "Name" = "internet-gateway"
        } -> null
      - tags_all = {
          - "Name" = "internet-gateway"
        } -> null
      - vpc_id   = "vpc-08e2588513ef1187f" -> null
    }

  # aws_nat_gateway.nat will be destroyed
  - resource "aws_nat_gateway" "nat" {
      - allocation_id                      = "eipalloc-0b0eb154a837444cc" -> null
      - association_id                     = "eipassoc-022d4759c1b722729" -> null
      - connectivity_type                  = "public" -> null
      - id                                 = "nat-0798ab7d4fbf0e586" -> null
      - network_interface_id               = "eni-056450c22eeaed83e" -> null
      - private_ip                         = "10.0.1.98" -> null
      - public_ip                          = "50.112.153.212" -> null
      - region                             = "us-west-2" -> null
      - secondary_allocation_ids           = [] -> null
      - secondary_private_ip_address_count = 0 -> null
      - secondary_private_ip_addresses     = [] -> null
      - subnet_id                          = "subnet-091400c1d3ca37516" -> null
      - tags                               = {
          - "Name" = "nat-gateway"
        } -> null
      - tags_all                           = {
          - "Name" = "nat-gateway"
        } -> null
    }

  # aws_route_table.private_rt will be destroyed
  - resource "aws_route_table" "private_rt" {
      - arn              = "arn:aws:ec2:us-west-2:221711265081:route-table/rtb-0c4ba9a105b1ac8c2" -> null
      - id               = "rtb-0c4ba9a105b1ac8c2" -> null
      - owner_id         = "221711265081" -> null
      - propagating_vgws = [] -> null
      - region           = "us-west-2" -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - nat_gateway_id             = "nat-0798ab7d4fbf0e586"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {
          - "Name" = "private-rt"
        } -> null
      - tags_all         = {
          - "Name" = "private-rt"
        } -> null
      - vpc_id           = "vpc-08e2588513ef1187f" -> null
    }

  # aws_route_table.public_rt will be destroyed
  - resource "aws_route_table" "public_rt" {
      - arn              = "arn:aws:ec2:us-west-2:221711265081:route-table/rtb-0577f30fac8cfcc8f" -> null
      - id               = "rtb-0577f30fac8cfcc8f" -> null
      - owner_id         = "221711265081" -> null
      - propagating_vgws = [] -> null
      - region           = "us-west-2" -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - gateway_id                 = "igw-054969ed16e22f151"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {
          - "Name" = "public-rt"
        } -> null
      - tags_all         = {
          - "Name" = "public-rt"
        } -> null
      - vpc_id           = "vpc-08e2588513ef1187f" -> null
    }

  # aws_route_table_association.private_assoc will be destroyed
  - resource "aws_route_table_association" "private_assoc" {
      - id             = "rtbassoc-0401c4cd056583925" -> null
      - region         = "us-west-2" -> null
      - route_table_id = "rtb-0c4ba9a105b1ac8c2" -> null
      - subnet_id      = "subnet-049bc353c8d2537d5" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_route_table_association.public_assoc will be destroyed
  - resource "aws_route_table_association" "public_assoc" {
      - id             = "rtbassoc-0fd8b9cef27119b1d" -> null
      - region         = "us-west-2" -> null
      - route_table_id = "rtb-0577f30fac8cfcc8f" -> null
      - subnet_id      = "subnet-091400c1d3ca37516" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_security_group.bastion_sg will be destroyed
  - resource "aws_security_group" "bastion_sg" {
      - arn                    = "arn:aws:ec2:us-west-2:221711265081:security-group/sg-031cc2c27d656f544" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-031cc2c27d656f544" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 22
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - name                   = "bastion-sg" -> null
      - owner_id               = "221711265081" -> null
      - region                 = "us-west-2" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "bastion-sg"
        } -> null
      - tags_all               = {
          - "Name" = "bastion-sg"
        } -> null
      - vpc_id                 = "vpc-08e2588513ef1187f" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_security_group.private_sg will be destroyed
  - resource "aws_security_group" "private_sg" {
      - arn                    = "arn:aws:ec2:us-west-2:221711265081:security-group/sg-041c3404a944a7e48" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-041c3404a944a7e48" -> null
      - ingress                = [
          - {
              - cidr_blocks      = []
              - from_port        = 22
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-031cc2c27d656f544",
                ]
              - self             = false
              - to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - name                   = "private-sg" -> null
      - owner_id               = "221711265081" -> null
      - region                 = "us-west-2" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "private-sg"
        } -> null
      - tags_all               = {
          - "Name" = "private-sg"
        } -> null
      - vpc_id                 = "vpc-08e2588513ef1187f" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_subnet.private will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-west-2:221711265081:subnet/subnet-049bc353c8d2537d5" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2a" -> null
      - availability_zone_id                           = "usw2-az2" -> null
      - cidr_block                                     = "10.0.2.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-049bc353c8d2537d5" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "221711265081" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - region                                         = "us-west-2" -> null
      - tags                                           = {
          - "Name" = "private-subnet"
        } -> null
      - tags_all                                       = {
          - "Name" = "private-subnet"
        } -> null
      - vpc_id                                         = "vpc-08e2588513ef1187f" -> null
        # (4 unchanged attributes hidden)
    }

  # aws_subnet.public will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-west-2:221711265081:subnet/subnet-091400c1d3ca37516" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2a" -> null
      - availability_zone_id                           = "usw2-az2" -> null
      - cidr_block                                     = "10.0.1.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-091400c1d3ca37516" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = true -> null
      - owner_id                                       = "221711265081" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - region                                         = "us-west-2" -> null
      - tags                                           = {
          - "Name" = "public-subnet"
        } -> null
      - tags_all                                       = {
          - "Name" = "public-subnet"
        } -> null
      - vpc_id                                         = "vpc-08e2588513ef1187f" -> null
        # (4 unchanged attributes hidden)
    }

  # aws_vpc.main will be destroyed
  - resource "aws_vpc" "main" {
      - arn                                  = "arn:aws:ec2:us-west-2:221711265081:vpc/vpc-08e2588513ef1187f" -> null
      - assign_generated_ipv6_cidr_block     = false -> null
      - cidr_block                           = "10.0.0.0/16" -> null
      - default_network_acl_id               = "acl-0019da5fbfe5fdc2e" -> null
      - default_route_table_id               = "rtb-0d342c46b2df4070a" -> null
      - default_security_group_id            = "sg-09290507c56b0a6e0" -> null
      - dhcp_options_id                      = "dopt-0668b03d61535d4f0" -> null
      - enable_dns_hostnames                 = true -> null
      - enable_dns_support                   = true -> null
      - enable_network_address_usage_metrics = false -> null
      - id                                   = "vpc-08e2588513ef1187f" -> null
      - instance_tenancy                     = "default" -> null
      - ipv6_netmask_length                  = 0 -> null
      - main_route_table_id                  = "rtb-0d342c46b2df4070a" -> null
      - owner_id                             = "221711265081" -> null
      - region                               = "us-west-2" -> null
      - tags                                 = {
          - "Name" = "secure-vpc"
        } -> null
      - tags_all                             = {
          - "Name" = "secure-vpc"
        } -> null
        # (4 unchanged attributes hidden)
    }

  # aws_vpc_endpoint.s3_endpoint will be destroyed
  - resource "aws_vpc_endpoint" "s3_endpoint" {
      - arn                        = "arn:aws:ec2:us-west-2:221711265081:vpc-endpoint/vpce-00e78f7ef2d17830e" -> null
      - cidr_blocks                = [
          - "3.5.76.0/22",
          - "3.5.80.0/21",
          - "18.34.48.0/20",
          - "18.34.244.0/22",
          - "52.92.128.0/17",
          - "52.218.128.0/17",
        ] -> null
      - dns_entry                  = [] -> null
      - id                         = "vpce-00e78f7ef2d17830e" -> null
      - network_interface_ids      = [] -> null
      - owner_id                   = "221711265081" -> null
      - policy                     = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "*"
                      - Effect    = "Allow"
                      - Principal = "*"
                      - Resource  = "*"
                    },
                ]
              - Version   = "2008-10-17"
            }
        ) -> null
      - prefix_list_id             = "pl-68a54001" -> null
      - private_dns_enabled        = false -> null
      - region                     = "us-west-2" -> null
      - requester_managed          = false -> null
      - route_table_ids            = [
          - "rtb-0c4ba9a105b1ac8c2",
        ] -> null
      - security_group_ids         = [] -> null
      - service_name               = "com.amazonaws.us-west-2.s3" -> null
      - service_region             = "us-west-2" -> null
      - state                      = "available" -> null
      - subnet_ids                 = [] -> null
      - tags                       = {
          - "Name" = "s3-endpoint"
        } -> null
      - tags_all                   = {
          - "Name" = "s3-endpoint"
        } -> null
      - vpc_endpoint_type          = "Gateway" -> null
      - vpc_id                     = "vpc-08e2588513ef1187f" -> null
        # (3 unchanged attributes hidden)
    }

Plan: 0 to add, 0 to change, 15 to destroy.

Changes to Outputs:
  - bastion_public_ip = "52.32.227.13" -> null
  - private_ec2_id    = "i-081ac78d67956ba55" -> null
  - vpc_id            = "vpc-08e2588513ef1187f" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: 

  aws_vpc.main: Creating...
aws_eip.nat: Creating...
aws_eip.nat: Creation complete after 2s [id=eipalloc-0b0eb154a837444cc]
aws_vpc.main: Still creating... [00m10s elapsed]
aws_vpc.main: Creation complete after 15s [id=vpc-08e2588513ef1187f]
aws_internet_gateway.igw: Creating...
aws_subnet.private: Creating...
aws_subnet.public: Creating...
aws_security_group.bastion_sg: Creating...
aws_subnet.private: Creation complete after 2s [id=subnet-049bc353c8d2537d5]
aws_internet_gateway.igw: Creation complete after 2s [id=igw-054969ed16e22f151]
aws_route_table.public_rt: Creating...
aws_route_table.public_rt: Creation complete after 2s [id=rtb-0577f30fac8cfcc8f]
aws_security_group.bastion_sg: Creation complete after 5s [id=sg-031cc2c27d656f544]
aws_security_group.private_sg: Creating...
aws_security_group.private_sg: Creation complete after 5s [id=sg-041c3404a944a7e48]
aws_instance.private_ec2: Creating...
aws_subnet.public: Still creating... [00m10s elapsed]
aws_subnet.public: Creation complete after 14s [id=subnet-091400c1d3ca37516]
aws_route_table_association.public_assoc: Creating...
aws_nat_gateway.nat: Creating...
aws_instance.bastion: Creating...
aws_route_table_association.public_assoc: Creation complete after 1s [id=rtbassoc-0fd8b9cef27119b1d]
aws_instance.private_ec2: Still creating... [00m11s elapsed]
aws_nat_gateway.nat: Still creating... [00m10s elapsed]
aws_instance.bastion: Still creating... [00m10s elapsed]
aws_instance.private_ec2: Still creating... [00m21s elapsed]
aws_nat_gateway.nat: Still creating... [00m20s elapsed]
aws_instance.bastion: Still creating... [00m20s elapsed]
aws_instance.private_ec2: Still creating... [00m31s elapsed]
aws_nat_gateway.nat: Still creating... [00m30s elapsed]
aws_instance.bastion: Still creating... [00m30s elapsed]
aws_instance.private_ec2: Creation complete after 37s [id=i-081ac78d67956ba55]
aws_instance.bastion: Creation complete after 36s [id=i-08d51ad8925fb9c09]
aws_nat_gateway.nat: Still creating... [00m41s elapsed]
aws_nat_gateway.nat: Still creating... [00m51s elapsed]
aws_nat_gateway.nat: Still creating... [01m01s elapsed]
aws_nat_gateway.nat: Still creating... [01m12s elapsed]
aws_nat_gateway.nat: Still creating... [01m22s elapsed]
aws_nat_gateway.nat: Creation complete after 1m30s [id=nat-0798ab7d4fbf0e586]
aws_route_table.private_rt: Creating...
aws_route_table.private_rt: Creation complete after 2s [id=rtb-0c4ba9a105b1ac8c2]
aws_route_table_association.private_assoc: Creating...
aws_vpc_endpoint.s3_endpoint: Creating...
aws_route_table_association.private_assoc: Creation complete after 1s [id=rtbassoc-0401c4cd056583925]
aws_vpc_endpoint.s3_endpoint: Creation complete after 9s [id=vpce-00e78f7ef2d17830e]

Apply complete! Resources: 15 added, 0 changed, 0 destroyed.

Outputs:

bastion_public_ip = "52.32.227.13"
private_ec2_id = "i-081ac78d67956ba55"
vpc_id = "vpc-08e2588513ef1187f"
sravan@sravankumar:~/terraform/bastion$ scp -i "jenQ.pem" jenQ.pem ubuntu@52.32.227.13:/home/ubuntu/jenQ.pem
The authenticity of host '52.32.227.13 (52.32.227.13)' can't be established.
ED25519 key fingerprint is SHA256:pSrrygHCeK5rwvfDAOx6Pp9BW5kztJIsWPVlk08ROH4.
This host key is known by the following other names/addresses:
    ~/.ssh/known_hosts:15: [hashed name]
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '52.32.227.13' (ED25519) to the list of known hosts.
jenQ.pem                                            100% 1678     7.0KB/s   00:00    
sravan@sravankumar:~/terraform/bastion$ terraform destroy
aws_vpc.main: Refreshing state... [id=vpc-08e2588513ef1187f]
aws_eip.nat: Refreshing state... [id=eipalloc-0b0eb154a837444cc]
aws_internet_gateway.igw: Refreshing state... [id=igw-054969ed16e22f151]
aws_subnet.private: Refreshing state... [id=subnet-049bc353c8d2537d5]
aws_subnet.public: Refreshing state... [id=subnet-091400c1d3ca37516]
aws_security_group.bastion_sg: Refreshing state... [id=sg-031cc2c27d656f544]
aws_route_table.public_rt: Refreshing state... [id=rtb-0577f30fac8cfcc8f]
aws_nat_gateway.nat: Refreshing state... [id=nat-0798ab7d4fbf0e586]
aws_instance.bastion: Refreshing state... [id=i-08d51ad8925fb9c09]
aws_security_group.private_sg: Refreshing state... [id=sg-041c3404a944a7e48]
aws_route_table_association.public_assoc: Refreshing state... [id=rtbassoc-0fd8b9cef27119b1d]
aws_route_table.private_rt: Refreshing state... [id=rtb-0c4ba9a105b1ac8c2]
aws_instance.private_ec2: Refreshing state... [id=i-081ac78d67956ba55]
aws_vpc_endpoint.s3_endpoint: Refreshing state... [id=vpce-00e78f7ef2d17830e]
aws_route_table_association.private_assoc: Refreshing state... [id=rtbassoc-0401c4cd056583925]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_eip.nat will be destroyed
  - resource "aws_eip" "nat" {
      - allocation_id            = "eipalloc-0b0eb154a837444cc" -> null
      - arn                      = "arn:aws:ec2:us-west-2:221711265081:elastic-ip/eipalloc-0b0eb154a837444cc" -> null
      - association_id           = "eipassoc-022d4759c1b722729" -> null
      - domain                   = "vpc" -> null
      - id                       = "eipalloc-0b0eb154a837444cc" -> null
      - network_border_group     = "us-west-2" -> null
      - network_interface        = "eni-056450c22eeaed83e" -> null
      - private_dns              = "ip-10-0-1-98.us-west-2.compute.internal" -> null
      - private_ip               = "10.0.1.98" -> null
      - public_dns               = "ec2-50-112-153-212.us-west-2.compute.amazonaws.com" -> null
      - public_ip                = "50.112.153.212" -> null
      - public_ipv4_pool         = "amazon" -> null
      - region                   = "us-west-2" -> null
      - tags                     = {
          - "Name" = "nat-eip"
        } -> null
      - tags_all                 = {
          - "Name" = "nat-eip"
        } -> null
        # (5 unchanged attributes hidden)
    }

  # aws_instance.bastion will be destroyed
  - resource "aws_instance" "bastion" {
      - ami                                  = "ami-05f991c49d264708f" -> null
      - arn                                  = "arn:aws:ec2:us-west-2:221711265081:instance/i-08d51ad8925fb9c09" -> null
      - associate_public_ip_address          = true -> null
      - availability_zone                    = "us-west-2a" -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-08d51ad8925fb9c09" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - key_name                             = "jenQ" -> null
      - monitoring                           = false -> null
      - placement_partition_number           = 0 -> null
      - primary_network_interface_id         = "eni-0ec25a0c06ea2d043" -> null
      - private_dns                          = "ip-10-0-1-54.us-west-2.compute.internal" -> null
      - private_ip                           = "10.0.1.54" -> null
      - public_dns                           = "ec2-52-32-227-13.us-west-2.compute.amazonaws.com" -> null
      - public_ip                            = "52.32.227.13" -> null
      - region                               = "us-west-2" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-091400c1d3ca37516" -> null
      - tags                                 = {
          - "Name" = "Bastion-Host"
        } -> null
      - tags_all                             = {
          - "Name" = "Bastion-Host"
        } -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-031cc2c27d656f544",
        ] -> null
        # (7 unchanged attributes hidden)

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - cpu_options {
          - core_count       = 1 -> null
          - threads_per_core = 1 -> null
            # (1 unchanged attribute hidden)
        }

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_protocol_ipv6          = "disabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - private_dns_name_options {
          - enable_resource_name_dns_a_record    = false -> null
          - enable_resource_name_dns_aaaa_record = false -> null
          - hostname_type                        = "ip-name" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/sda1" -> null
          - encrypted             = false -> null
          - iops                  = 3000 -> null
          - tags                  = {} -> null
          - tags_all              = {} -> null
          - throughput            = 125 -> null
          - volume_id             = "vol-05676af78af7e847f" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp3" -> null
            # (1 unchanged attribute hidden)
        }
    }

  # aws_instance.private_ec2 will be destroyed
  - resource "aws_instance" "private_ec2" {
      - ami                                  = "ami-05f991c49d264708f" -> null
      - arn                                  = "arn:aws:ec2:us-west-2:221711265081:instance/i-081ac78d67956ba55" -> null
      - associate_public_ip_address          = false -> null
      - availability_zone                    = "us-west-2a" -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-081ac78d67956ba55" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - key_name                             = "jenQ" -> null
      - monitoring                           = false -> null
      - placement_partition_number           = 0 -> null
      - primary_network_interface_id         = "eni-0dae9783d4c5be4f4" -> null
      - private_dns                          = "ip-10-0-2-31.us-west-2.compute.internal" -> null
      - private_ip                           = "10.0.2.31" -> null
      - region                               = "us-west-2" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-049bc353c8d2537d5" -> null
      - tags                                 = {
          - "Name" = "Private-EC2"
        } -> null
      - tags_all                             = {
          - "Name" = "Private-EC2"
        } -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-041c3404a944a7e48",
        ] -> null
        # (9 unchanged attributes hidden)

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - cpu_options {
          - core_count       = 1 -> null
          - threads_per_core = 1 -> null
            # (1 unchanged attribute hidden)
        }

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_protocol_ipv6          = "disabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - private_dns_name_options {
          - enable_resource_name_dns_a_record    = false -> null
          - enable_resource_name_dns_aaaa_record = false -> null
          - hostname_type                        = "ip-name" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/sda1" -> null
          - encrypted             = false -> null
          - iops                  = 3000 -> null
          - tags                  = {} -> null
          - tags_all              = {} -> null
          - throughput            = 125 -> null
          - volume_id             = "vol-025d6524bc3e4ee2d" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp3" -> null
            # (1 unchanged attribute hidden)
        }
    }

  # aws_internet_gateway.igw will be destroyed
  - resource "aws_internet_gateway" "igw" {
      - arn      = "arn:aws:ec2:us-west-2:221711265081:internet-gateway/igw-054969ed16e22f151" -> null
      - id       = "igw-054969ed16e22f151" -> null
      - owner_id = "221711265081" -> null
      - region   = "us-west-2" -> null
      - tags     = {
          - "Name" = "internet-gateway"
        } -> null
      - tags_all = {
          - "Name" = "internet-gateway"
        } -> null
      - vpc_id   = "vpc-08e2588513ef1187f" -> null
    }

  # aws_nat_gateway.nat will be destroyed
  - resource "aws_nat_gateway" "nat" {
      - allocation_id                      = "eipalloc-0b0eb154a837444cc" -> null
      - association_id                     = "eipassoc-022d4759c1b722729" -> null
      - connectivity_type                  = "public" -> null
      - id                                 = "nat-0798ab7d4fbf0e586" -> null
      - network_interface_id               = "eni-056450c22eeaed83e" -> null
      - private_ip                         = "10.0.1.98" -> null
      - public_ip                          = "50.112.153.212" -> null
      - region                             = "us-west-2" -> null
      - secondary_allocation_ids           = [] -> null
      - secondary_private_ip_address_count = 0 -> null
      - secondary_private_ip_addresses     = [] -> null
      - subnet_id                          = "subnet-091400c1d3ca37516" -> null
      - tags                               = {
          - "Name" = "nat-gateway"
        } -> null
      - tags_all                           = {
          - "Name" = "nat-gateway"
        } -> null
    }

  # aws_route_table.private_rt will be destroyed
  - resource "aws_route_table" "private_rt" {
      - arn              = "arn:aws:ec2:us-west-2:221711265081:route-table/rtb-0c4ba9a105b1ac8c2" -> null
      - id               = "rtb-0c4ba9a105b1ac8c2" -> null
      - owner_id         = "221711265081" -> null
      - propagating_vgws = [] -> null
      - region           = "us-west-2" -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - nat_gateway_id             = "nat-0798ab7d4fbf0e586"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {
          - "Name" = "private-rt"
        } -> null
      - tags_all         = {
          - "Name" = "private-rt"
        } -> null
      - vpc_id           = "vpc-08e2588513ef1187f" -> null
    }

  # aws_route_table.public_rt will be destroyed
  - resource "aws_route_table" "public_rt" {
      - arn              = "arn:aws:ec2:us-west-2:221711265081:route-table/rtb-0577f30fac8cfcc8f" -> null
      - id               = "rtb-0577f30fac8cfcc8f" -> null
      - owner_id         = "221711265081" -> null
      - propagating_vgws = [] -> null
      - region           = "us-west-2" -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - gateway_id                 = "igw-054969ed16e22f151"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {
          - "Name" = "public-rt"
        } -> null
      - tags_all         = {
          - "Name" = "public-rt"
        } -> null
      - vpc_id           = "vpc-08e2588513ef1187f" -> null
    }

  # aws_route_table_association.private_assoc will be destroyed
  - resource "aws_route_table_association" "private_assoc" {
      - id             = "rtbassoc-0401c4cd056583925" -> null
      - region         = "us-west-2" -> null
      - route_table_id = "rtb-0c4ba9a105b1ac8c2" -> null
      - subnet_id      = "subnet-049bc353c8d2537d5" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_route_table_association.public_assoc will be destroyed
  - resource "aws_route_table_association" "public_assoc" {
      - id             = "rtbassoc-0fd8b9cef27119b1d" -> null
      - region         = "us-west-2" -> null
      - route_table_id = "rtb-0577f30fac8cfcc8f" -> null
      - subnet_id      = "subnet-091400c1d3ca37516" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_security_group.bastion_sg will be destroyed
  - resource "aws_security_group" "bastion_sg" {
      - arn                    = "arn:aws:ec2:us-west-2:221711265081:security-group/sg-031cc2c27d656f544" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-031cc2c27d656f544" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 22
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - name                   = "bastion-sg" -> null
      - owner_id               = "221711265081" -> null
      - region                 = "us-west-2" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "bastion-sg"
        } -> null
      - tags_all               = {
          - "Name" = "bastion-sg"
        } -> null
      - vpc_id                 = "vpc-08e2588513ef1187f" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_security_group.private_sg will be destroyed
  - resource "aws_security_group" "private_sg" {
      - arn                    = "arn:aws:ec2:us-west-2:221711265081:security-group/sg-041c3404a944a7e48" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-041c3404a944a7e48" -> null
      - ingress                = [
          - {
              - cidr_blocks      = []
              - from_port        = 22
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-031cc2c27d656f544",
                ]
              - self             = false
              - to_port          = 22
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - name                   = "private-sg" -> null
      - owner_id               = "221711265081" -> null
      - region                 = "us-west-2" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "private-sg"
        } -> null
      - tags_all               = {
          - "Name" = "private-sg"
        } -> null
      - vpc_id                 = "vpc-08e2588513ef1187f" -> null
        # (1 unchanged attribute hidden)
    }

  # aws_subnet.private will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-west-2:221711265081:subnet/subnet-049bc353c8d2537d5" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2a" -> null
      - availability_zone_id                           = "usw2-az2" -> null
      - cidr_block                                     = "10.0.2.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-049bc353c8d2537d5" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "221711265081" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - region                                         = "us-west-2" -> null
      - tags                                           = {
          - "Name" = "private-subnet"
        } -> null
      - tags_all                                       = {
          - "Name" = "private-subnet"
        } -> null
      - vpc_id                                         = "vpc-08e2588513ef1187f" -> null
        # (4 unchanged attributes hidden)
    }

  # aws_subnet.public will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-west-2:221711265081:subnet/subnet-091400c1d3ca37516" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2a" -> null
      - availability_zone_id                           = "usw2-az2" -> null
      - cidr_block                                     = "10.0.1.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-091400c1d3ca37516" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = true -> null
      - owner_id                                       = "221711265081" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - region                                         = "us-west-2" -> null
      - tags                                           = {
          - "Name" = "public-subnet"
        } -> null
      - tags_all                                       = {
          - "Name" = "public-subnet"
        } -> null
      - vpc_id                                         = "vpc-08e2588513ef1187f" -> null
        # (4 unchanged attributes hidden)
    }

  # aws_vpc.main will be destroyed
  - resource "aws_vpc" "main" {
      - arn                                  = "arn:aws:ec2:us-west-2:221711265081:vpc/vpc-08e2588513ef1187f" -> null
      - assign_generated_ipv6_cidr_block     = false -> null
      - cidr_block                           = "10.0.0.0/16" -> null
      - default_network_acl_id               = "acl-0019da5fbfe5fdc2e" -> null
      - default_route_table_id               = "rtb-0d342c46b2df4070a" -> null
      - default_security_group_id            = "sg-09290507c56b0a6e0" -> null
      - dhcp_options_id                      = "dopt-0668b03d61535d4f0" -> null
      - enable_dns_hostnames                 = true -> null
      - enable_dns_support                   = true -> null
      - enable_network_address_usage_metrics = false -> null
      - id                                   = "vpc-08e2588513ef1187f" -> null
      - instance_tenancy                     = "default" -> null
      - ipv6_netmask_length                  = 0 -> null
      - main_route_table_id                  = "rtb-0d342c46b2df4070a" -> null
      - owner_id                             = "221711265081" -> null
      - region                               = "us-west-2" -> null
      - tags                                 = {
          - "Name" = "secure-vpc"
        } -> null
      - tags_all                             = {
          - "Name" = "secure-vpc"
        } -> null
        # (4 unchanged attributes hidden)
    }

  # aws_vpc_endpoint.s3_endpoint will be destroyed
  - resource "aws_vpc_endpoint" "s3_endpoint" {
      - arn                        = "arn:aws:ec2:us-west-2:221711265081:vpc-endpoint/vpce-00e78f7ef2d17830e" -> null
      - cidr_blocks                = [
          - "3.5.76.0/22",
          - "3.5.80.0/21",
          - "18.34.48.0/20",
          - "18.34.244.0/22",
          - "52.92.128.0/17",
          - "52.218.128.0/17",
        ] -> null
      - dns_entry                  = [] -> null
      - id                         = "vpce-00e78f7ef2d17830e" -> null
      - network_interface_ids      = [] -> null
      - owner_id                   = "221711265081" -> null
      - policy                     = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "*"
                      - Effect    = "Allow"
                      - Principal = "*"
                      - Resource  = "*"
                    },
                ]
              - Version   = "2008-10-17"
            }
        ) -> null
      - prefix_list_id             = "pl-68a54001" -> null
      - private_dns_enabled        = false -> null
      - region                     = "us-west-2" -> null
      - requester_managed          = false -> null
      - route_table_ids            = [
          - "rtb-0c4ba9a105b1ac8c2",
        ] -> null
      - security_group_ids         = [] -> null
      - service_name               = "com.amazonaws.us-west-2.s3" -> null
      - service_region             = "us-west-2" -> null
      - state                      = "available" -> null
      - subnet_ids                 = [] -> null
      - tags                       = {
          - "Name" = "s3-endpoint"
        } -> null
      - tags_all                   = {
          - "Name" = "s3-endpoint"
        } -> null
      - vpc_endpoint_type          = "Gateway" -> null
      - vpc_id                     = "vpc-08e2588513ef1187f" -> null
        # (3 unchanged attributes hidden)
    }

Plan: 0 to add, 0 to change, 15 to destroy.

Changes to Outputs:
  - bastion_public_ip = "52.32.227.13" -> null
  - private_ec2_id    = "i-081ac78d67956ba55" -> null
  - vpc_id            = "vpc-08e2588513ef1187f" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_route_table_association.public_assoc: Destroying... [id=rtbassoc-0fd8b9cef27119b1d]
aws_route_table_association.private_assoc: Destroying... [id=rtbassoc-0401c4cd056583925]
aws_vpc_endpoint.s3_endpoint: Destroying... [id=vpce-00e78f7ef2d17830e]
aws_instance.private_ec2: Destroying... [id=i-081ac78d67956ba55]
aws_instance.bastion: Destroying... [id=i-08d51ad8925fb9c09]
aws_route_table_association.private_assoc: Destruction complete after 1s
aws_route_table_association.public_assoc: Destruction complete after 1s
aws_route_table.public_rt: Destroying... [id=rtb-0577f30fac8cfcc8f]
aws_route_table.public_rt: Destruction complete after 2s
aws_internet_gateway.igw: Destroying... [id=igw-054969ed16e22f151]
aws_vpc_endpoint.s3_endpoint: Destruction complete after 7s
aws_route_table.private_rt: Destroying... [id=rtb-0c4ba9a105b1ac8c2]
aws_route_table.private_rt: Destruction complete after 2s
aws_nat_gateway.nat: Destroying... [id=nat-0798ab7d4fbf0e586]
aws_instance.private_ec2: Still destroying... [id=i-081ac78d67956ba55, 00m10s elapsed]
aws_instance.bastion: Still destroying... [id=i-08d51ad8925fb9c09, 00m10s elapsed]
aws_internet_gateway.igw: Still destroying... [id=igw-054969ed16e22f151, 00m10s elapsed]
aws_nat_gateway.nat: Still destroying... [id=nat-0798ab7d4fbf0e586, 00m10s elapsed]
aws_instance.bastion: Still destroying... [id=i-08d51ad8925fb9c09, 00m20s elapsed]
aws_instance.private_ec2: Still destroying... [id=i-081ac78d67956ba55, 00m20s elapsed]
aws_internet_gateway.igw: Still destroying... [id=igw-054969ed16e22f151, 00m20s elapsed]
aws_nat_gateway.nat: Still destroying... [id=nat-0798ab7d4fbf0e586, 00m22s elapsed]
aws_instance.bastion: Still destroying... [id=i-08d51ad8925fb9c09, 00m31s elapsed]
aws_instance.private_ec2: Still destroying... [id=i-081ac78d67956ba55, 00m31s elapsed]
aws_instance.bastion: Destruction complete after 33s
aws_instance.private_ec2: Destruction complete after 34s
aws_subnet.private: Destroying... [id=subnet-049bc353c8d2537d5]
aws_security_group.private_sg: Destroying... [id=sg-041c3404a944a7e48]
aws_internet_gateway.igw: Still destroying... [id=igw-054969ed16e22f151, 00m31s elapsed]
aws_subnet.private: Destruction complete after 1s
aws_security_group.private_sg: Destruction complete after 1s
aws_security_group.bastion_sg: Destroying... [id=sg-031cc2c27d656f544]
aws_security_group.bastion_sg: Destruction complete after 1s
aws_nat_gateway.nat: Still destroying... [id=nat-0798ab7d4fbf0e586, 00m32s elapsed]
aws_internet_gateway.igw: Still destroying... [id=igw-054969ed16e22f151, 00m41s elapsed]
aws_nat_gateway.nat: Still destroying... [id=nat-0798ab7d4fbf0e586, 00m42s elapsed]
aws_internet_gateway.igw: Still destroying... [id=igw-054969ed16e22f151, 00m51s elapsed]
aws_internet_gateway.igw: Destruction complete after 52s
aws_nat_gateway.nat: Still destroying... [id=nat-0798ab7d4fbf0e586, 00m53s elapsed]
aws_nat_gateway.nat: Destruction complete after 56s
aws_subnet.public: Destroying... [id=subnet-091400c1d3ca37516]
aws_eip.nat: Destroying... [id=eipalloc-0b0eb154a837444cc]
aws_subnet.public: Destruction complete after 1s
aws_vpc.main: Destroying... [id=vpc-08e2588513ef1187f]
aws_eip.nat: Destruction complete after 2s
aws_vpc.main: Destruction complete after 1s

Destroy complete! Resources: 15 destroyed.
sravan@sravankumar:~/terraform/bastion$ 
